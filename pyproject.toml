[project]
name = "mcp-paradex"
version = "0.1.0"
description = "MCP server for Paradex trading platform integration"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "mcp[cli]>=1.6.0",
    "paradex-py>=0.4.3",
    "pydantic>=2.10.6",
    "uvicorn>=0.34.0",
    "python-dotenv>=1.0.1",
    "argparse>=1.4.0",
    "aiohttp>=3.11.14",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "ruff>=0.11.2",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
]

[project.scripts]
mcp-paradex = "mcp_paradex.server.server:run_cli"

[project.entry-points."mcp.server"]
paradex = "mcp_paradex.server.server:server"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe complexity
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.isort]
known-first-party = ["mcp_paradex"]
known-third-party = ["mcp", "paradex_py", "pydantic"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=mcp_paradex --cov-report=term-missing"
